<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Colors-->
    <SolidColorBrush x:Key="MainDarkColor" Color="#555555"/>
    <SolidColorBrush x:Key="SecondDarkColor" Color="#535353"/>
    <SolidColorBrush x:Key="ThirdDarkColor" Color="#737373"/>
    <SolidColorBrush x:Key="ActiveDarkColor" Color="#5E5E5E"/>
    <SolidColorBrush x:Key="FourDarkColor" Color="#696969"/>
    <SolidColorBrush x:Key="SideMenuDarkColor" Color="#4A4A4A"/>
    <SolidColorBrush x:Key="PressedDarkColor" Color="#363636"/>
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SplitterColor" Color="#3D3D3D"/>
    <SolidColorBrush x:Key="ActionButtonColor" Color="#454545"/>
    <SolidColorBrush x:Key="TextBoxBackColor" Color="#A7A7A7"/>
    <SolidColorBrush x:Key="BlackColor" Color="#000000"/>



    <!--CheckBoxes-->
    <Style x:Key="PrimaryCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--ListBoxes-->
    <Style x:Key="ListBox" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SplitterColor}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainDarkColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainDarkColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainDarkColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainDarkColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--2d-->
    <Style x:Key="Rectangle" TargetType="Rectangle">
        <Setter Property="Fill" Value="{DynamicResource SplitterColor}"/>
    </Style>

    <!--ListViews-->
    <Style x:Key="ListView" TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SplitterColor}"/>
    </Style>

    <!--DataGrids-->
    <Style x:Key="DataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SplitterColor}"/>
        <Setter Property="RowBackground" Value="{DynamicResource SecondDarkColor}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource SplitterColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource SplitterColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
    </Style>

    <!--DataGridHeader-->
    <Style x:Key="DataGridHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource ActionButtonColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SplitterColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="DataGridCell" TargetType="DataGridCell">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SplitterColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="cellBorder" Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="cellBorder" Property="Background" Value="{DynamicResource ThirdDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Windows-->
    <Style x:Key="win" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
    </Style>

    <Style x:Key="page" TargetType="Page">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
    </Style>

    <!--Frames-->
    <Style x:Key="RootFrame" TargetType="Frame">
        <Setter Property="Background" Value="{DynamicResource MainDarkColor}"/>
        <Setter Property="NavigationUIVisibility" Value="Hidden"/>
    </Style>

    <!--Splitters-->
    <Style x:Key="splitter" TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource SplitterColor}"/>
    </Style>

    <!--Buttons-->
    <Style x:Key="ActionMiniButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ActionButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ThirdDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedDarkColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideMenuButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecondDarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,12,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ThirdDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedDarkColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ThemeButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecondDarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,12,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ThirdDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedDarkColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,12,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="btnBorder" 
                            Background="{TemplateBinding Background}"
                            Opacity="{TemplateBinding Opacity}"
                            SnapsToDevicePixels="True"
                            >
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              Opacity="{TemplateBinding Opacity}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Opacity" Value="0.4"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectedSideMenuButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ActiveDarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,12,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ThirdDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource PressedDarkColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBlocks+Labels-->
    <Style x:Key="HeaderText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LittleText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LabelText" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CaptionText" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="PrimaryText" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--DockPanels-->
    <Style x:Key="HeaderDockPanel" TargetType="DockPanel">

        <Setter Property="Background" Value="{DynamicResource FourDarkColor}"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
    </Style>

    <Style x:Key="SideMenuDockPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource SideMenuDarkColor}"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.Column" Value="0"/>
    </Style>

    <!--TextBoxes-->
    <Style x:Key="PrimaryTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackColor}"/>
    </Style>

    <Style x:Key="PrimaryPasswordBox" TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackColor}"/>
    </Style>

    <!--ComboBoxes-->
    <Style x:Key="PrimaryComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackColor}"/>
    </Style>

    <!--DatePickers-->
    <Style x:Key="PrimaryDatePicker" TargetType="DatePicker">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackColor}"/>
    </Style>

</ResourceDictionary>